diff --git a/a1/.gitignore b/a1/.gitignore

--- a/a1/app.py
+++ b/a1/app.py
@@ -19,7 +19,7 @@ def main():
         try:
             line = sys.stdin.readline().strip()
             if line == '':
-                sys.stderr.write('Program exiting on empty string')
+                # sys.stderr.write('Program exiting on empty string')
                 break

             # process the input and perform logic
@@ -41,10 +41,10 @@ def main():
             elif in_word.cmd == 'rm':
                 streets.remove(in_word.street_name)
             else:
-                print(f'Error: your command "{line}" was not understood')
+                print(f'Error: your command "{line}" was not understood', file=sys.stderr)

         except Exception as e:
-            print(f'Error: received unhandled exception, continue operation {e}')
+            print(f'Error: received unhandled exception, continue operation {e}', file=sys.stderr)


 # if __name__ == "__main__":
diff --git a/a1/input.py b/a1/input.py
index 9127769..5c4a19c 100644
--- a/a1/input.py
+++ b/a1/input.py
@@ -1,5 +1,6 @@
 import shlex
 import re
+import sys
 from sys import stderr
 from node import Node

@@ -98,7 +99,7 @@ def process_input(line) -> InputContent:

     if cmd == ADD:
         if len(li) <= 1:
-            print(f'ERROR: for adding {r.__dict__}, {li}, {cord} you cannot have only 1 coordinate. ')
+            print(f'Error: for adding {r.__dict__}, {li}, {cord} you cannot have only 1 coordinate. ', file=sys.stderr)
             r.status = False
             return r

@@ -106,39 +107,39 @@ def process_input(line) -> InputContent:
     return r


diff --git a/a1/street.py b/a1/street.py
index d9054b4..fb6e3f1 100644
--- a/a1/street.py
+++ b/a1/street.py
@@ -1,6 +1,7 @@
 from graph import Graph
 from node import Node
 from line import Line
+from sys import stderr


 class Street:
@@ -13,19 +14,19 @@ class Street:
         if street_name not in self.street_db:
             self.street_db[street_name] = coordinates
         else:
-            print(f'ERRROR Street.add(): {street_name} already exists')
+            print(f'Error: Street.add(): {street_name} already exists', file=stderr)

     def modify(self, street_name: str, coordinates: list):
         if street_name in self.street_db:
             self.street_db[street_name] = coordinates
         else:
-            print(f'ERRROR Street.modify(): {street_name} does not exists')
+            print(f'Error: Street.modify(): {street_name} does not exists', file=stderr)

     def remove(self, street_name):
         if street_name in self.street_db:
             del self.street_db[street_name]
         else:
-            print(f'ERRROR Street.remove(): {street_name} does not exists')
+            print(f'Error: Street.remove(): {street_name} does not exists', file=stderr)

     def to_line(self):
         street_lns = {}
@@ -45,7 +46,7 @@ class Street:
         graph.generate_graph()


-if __name__ == '__main__':
-    st = Street()
-    st.add('Cool weeber Street', [Node(1, 2), Node(3, 4), Node(5, 6)])
-    print(st.to_line())
+# if __name__ == '__main__':
+    # st = Street()
+    # st.add('Cool weeber Street', [Node(1, 2), Node(3, 4), Node(5, 6)])
+    # print(st.to_line())
